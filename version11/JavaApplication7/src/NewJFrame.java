/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.io.*;
import javax.swing.JOptionPane;
import java.awt.Color; 
import java.awt.Font;
import java.util.Locale;
import javax.swing.*;
import java.math.*;
import java.util.Random;
import java.awt.datatransfer.*;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Date;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import java.util.HashMap; 
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager; 
import net.sf.jasperreports.engine.JasperPrint; 
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource; 
import net.sf.jasperreports.swing.JRViewer; 
import net.sf.jasperreports.engine.JRException; 
import net.sf.jasperreports.engine.JasperCompileManager; 
import net.sf.jasperreports.engine.JasperExportManager; 
import net.sf.jasperreports.engine.JasperFillManager; 
import net.sf.jasperreports.engine.JasperPrint; 
import net.sf.jasperreports.engine.JasperReport; 
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource; 
import net.sf.jasperreports.engine.design.JasperDesign; 
import net.sf.jasperreports.engine.xml.JRXmlLoader; 
/**
 *
 * @author 1
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        jPanel5.setBorder(BorderFactory.createTitledBorder(BorderFactory.createBevelBorder(3), "Паспортные значения"));
        jPanel7.setBorder(BorderFactory.createTitledBorder(BorderFactory.createBevelBorder(3), "Результаты калибровки"));
       // jButton3.addActionListener(new GetNameOfFile (jTextField1, jButton3)); 
        jTextField2.setText("1");
        jTextField3.setText("0.21");
        jTextField4.setText("0.19");
        jTextField5.setText("50");
        jTextField10.setText("1");
        jTextField14.setText("1");
        jTextField11.setText("1");
        jTextField15.setText("100");
        jTextField13.setText("0.5");
        jTextField12.setText("0.01");
        jTextField17.setText("0.01");
        jTextField16.setText("50");
        
        
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jButton2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jTextField18 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton8 = new javax.swing.JRadioButton();
        jTextField20 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextField21 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setAutoscrolls(true);

        jPanel1.setAutoscrolls(true);
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setFocusCycleRoot(true);
        jPanel1.setNextFocusableComponent(jSpinner1);
        jPanel1.setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Количество фильтров");
        jLabel1.setToolTipText("");

        jSpinner1.setNextFocusableComponent(jButton2);
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jButton2.setText("Ок");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel4.setAutoscrolls(true);
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 979, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 307, Short.MAX_VALUE)
        );

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel24.setText("Источник СИ");
        jLabel24.setToolTipText("");

        jTextField1.setText("Источник не выбран");

        jButton1.setText("Выбор файла");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setText("Считать конфигурацию");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1))
                            .addComponent(jSeparator1))))
                .addContainerGap(1914, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2)
                        .addComponent(jButton6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)
                            .addComponent(jLabel24))))
                .addGap(45, 45, 45)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(271, Short.MAX_VALUE))
        );

        jSpinner1.setModel(new SpinnerNumberModel (2,2,10,1));

        jTabbedPane1.addTab("Конфигурация", jPanel1);

        jButton4.setLabel("Расчет");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTextField6.setNextFocusableComponent(jTextField7);
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("k");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("hd");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("hc");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText("hs");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("мкм");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("мкм");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("мкм");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTextField9, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(jTextField8)
                            .addComponent(jTextField7)
                            .addComponent(jTextField6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13)
                                .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("k");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("hd");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("hc");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("hs");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("мкм");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("мкм");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("мкм");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setText("<");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setText("<");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setText("<");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setText("<");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("<");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setText("<");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setText("<");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setText("<");

        jCheckBox1.setText("не изменять");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("не изменять");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("не изменять");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setText("не изменять");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel2))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel23))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox1))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox2))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox3))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel22))
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel8)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox4)))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox3))
                .addGap(8, 8, 8)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(jCheckBox4))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jButton5.setText("<html>\n<p>скопировать</p> \n<p>в буфер</p>");
        jButton5.setActionCommand("<html>\n<p><center>скопировать</p> \n<p>в буфер</p>");
        jButton5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("создать отчет");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("jButton8");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jButton8)))
                .addContainerGap(2181, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jButton4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(jButton8)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton7)))
                .addContainerGap(353, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Расчет", jPanel2);

        jPanel3.setFocusable(false);

        jButton3.setText("Построить график");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 821, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 354, Short.MAX_VALUE)
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("X"));
        jPanel8.setName("X"); // NOI18N

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("автоматический");

        buttonGroup2.add(jRadioButton2);
        jRadioButton2.setText("настраиваемый");
        jRadioButton2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton2StateChanged(evt);
            }
        });
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup3.add(jRadioButton3);
        jRadioButton3.setSelected(true);
        jRadioButton3.setText("линейный");

        buttonGroup3.add(jRadioButton4);
        jRadioButton4.setText("логарифмический");

        jTextField18.setVisible(false);

        jLabel25.setVisible(false);
        jLabel25.setText("min");

        jTextField19.setVisible(false);

        jLabel26.setVisible(false);
        jLabel26.setText("max");

        jLabel27.setText("Предельные значения");

        jLabel28.setText("Масштаб оси");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton4))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25)
                            .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)))
                    .addComponent(jRadioButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Y"));
        jPanel9.setName("X"); // NOI18N

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setSelected(true);
        jRadioButton5.setText("автоматический");

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setText("настраиваемый");
        jRadioButton6.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jRadioButton6StateChanged(evt);
            }
        });
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        buttonGroup4.add(jRadioButton7);
        jRadioButton7.setSelected(true);
        jRadioButton7.setText("линейный");

        buttonGroup4.add(jRadioButton8);
        jRadioButton8.setText("логарифмический");

        jTextField20.setVisible(false);

        jLabel29.setVisible(false);
        jLabel29.setText("min");

        jTextField21.setVisible(false);

        jLabel30.setVisible(false);
        jLabel30.setText("max");

        jLabel31.setText("Предельные значения");

        jLabel32.setText("Масштаб оси");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(jRadioButton5)
                            .addComponent(jRadioButton6))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton7)
                            .addComponent(jRadioButton8))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton6)
                            .addComponent(jRadioButton8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29)
                            .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)))
                    .addComponent(jRadioButton5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(2064, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jButton3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(210, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("График", jPanel3);

        jScrollPane3.setViewportView(jTabbedPane1);

        jMenu1.setText("File");

        jMenuItem1.setText("Рабочая папка");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1046, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
            
    public double nevjazka (double [] I1, double [] I0)  {
         double T0=0;
          T0=0;
        for(int k=0; k<count_of_filters; k++){
           T0=T0+Math.pow((I1[k]-I0[k]),2);
        }
         return T0;
     } 
    public double detector_current (DataFromFile source, Detector detector, filter filter, double []b) {
       final double e0=1.6e-19;
        double current=0; 
       //находим верхний предел интегрирования
       int n=source.SizeOfFile(source.Name_of_file);
     
       //находим точки разбиения
      // double [][] X=new double[][];
          double  X[][]=source.Data_reading(source.Name_of_file, n);
       //первый фильтр
       int n_f1=filter.SizeOfFile(filter.FName_base);
       double [][] X_f1=filter.Data_reading(filter.FName_base, n_f1);
       double [][] A_f1=filter.Material_interpolation(X_f1, n_f1);
       //второй фильтр
       int n_f2=filter.SizeOfFile(filter.FName_spray);
       double [][] X_f2=filter.Data_reading(filter.FName_spray, n_f2);
       double [][]A_f2=filter.Material_interpolation(X_f2, n_f2);
       //детектор
       int n_d1=detector.SizeOfFile(detector.FName_base);
       double [][]X_d1=detector.Data_reading(detector.FName_base, n_d1);
       double [][]A_d1=detector.Material_interpolation(X_d1, n_d1);
       int n_d2=detector.SizeOfFile(detector.FName_spray);
       double [][]X_d2=detector.Data_reading(detector.FName_spray, n_d2);
       double [][]A_d2=detector.Material_interpolation(X_d2, n_d2);
       for (int i=0; i<n-1;i++){
        double Sd;
        Sd=Math.pow(filter.Point_z(X_f1, A_f1, n_f1, X[i][0]), filter.Thick_base)*Math.pow(filter.Point_z(X_f2, A_f2, n_f2, X[i][0]), filter.Thick_spray);
        double S;
        S=0.273*b[0]*Math.pow(detector.Point_z(X_d1, A_d1, n_d1, X[i][0]), b[1]);
        S=S*Math.pow(detector.Point_z(X_d2, A_d2, n_d2, X[i][0]), b[2]);
        S=S*(1-Math.pow(detector.Point_z(X_d1, A_d1, n_d1, X[i][0]), b[3]));
       current=current+Sd*S*X[i][1]*X[i][0]*Math.abs(X[i+1][0]-X[i][0]); 
       // current=current+X[i][1]*Math.abs(X[i+1][0]-X[i][0]); 
       }
       return //current;
               current*e0*1000000;
    }
    public double [] linear(double[]b, double [] I0, double [] I1,filter [] filter){
        double [] b1=new double [4];
        //ищем производные
        double [][]x=new double[count_of_filters][4];
       // DataFromFile source1=new DataFromFile(jTextField1.getText());
        DataFromFile source1=new DataFromFile("C:\\Users\\1\\Desktop\\ияф\\filter\\data.txt"); 
         String Name_base="C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Si.txt";
        String Name_layer="C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Al.txt";
        Detector detector1=new Detector(Name_base, Name_layer);
        //находим верхний предел интегрирования
       int n=source1.SizeOfFile(source1.Name_of_file);
       //находим точки разбиения
        double [][]X=source1.Data_reading(source1.Name_of_file, n);
        //производные по первому параметру
        for (int i=0; i<count_of_filters; i++){
         final double e0=1.6e-19;
        x[i][0]=0; 
       //первый фильтр
       int n_f1=filter[i].SizeOfFile(filter[i].FName_base);
       double  [][]X_f1=filter[i].Data_reading(filter[i].FName_base, n_f1);
       double [][]A_f1=filter[i].Material_interpolation(X_f1, n_f1);
       //второй фильтр
       int n_f2=filter[i].SizeOfFile(filter[i].FName_spray);
       double [][]X_f2=filter[i].Data_reading(filter[i].FName_spray, n_f2);
       double [][]A_f2=filter[i].Material_interpolation(X_f2, n_f2);
       //детектор
       int n_d1=detector1.SizeOfFile(detector1.FName_base);
       double [][]X_d1=detector1.Data_reading(detector1.FName_base, n_d1);
       double [][]A_d1=detector1.Material_interpolation(X_d1, n_d1);
       int n_d2=detector1.SizeOfFile(detector1.FName_spray);
       double [][]X_d2=detector1.Data_reading(detector1.FName_spray, n_d2);
       double [][]A_d2=detector1.Material_interpolation(X_d2, n_d2);
       for (int j=0; j<n-1;j++){
        double Sd;
        Sd=Math.pow(filter[i].Point_z(X_f1, A_f1, n_f1, X[j][0]), filter[i].Thick_base)*Math.pow(filter[i].Point_z(X_f2, A_f2, n_f2, X[j][0]), filter[i].Thick_spray);
        double S;
        S=0.273*b[0]*Math.pow(detector1.Point_z(X_d1, A_d1, n_d1, X[j][0]), b[1]);
        S=S*Math.pow(detector1.Point_z(X_d2, A_d2, n_d2, X[j][0]), b[2]);
        S=S*(1-Math.pow(detector1.Point_z(X_d1, A_d1, n_d1, X[j][0]), b[3]))/b[0];
        x[i][0]=x[i][0]+Sd*S*X[j][1]*X[j][0]*Math.abs(X[j+1][0]-X[j][0])*e0*1000000;   
       } 
        }
        //производные по второму, третьему и четвертому параметру
        for (int i=0; i<count_of_filters; i++){
         final double e0=1.6e-19;
        x[i][1]=0; x[i][2]=0;x[i][3]=0;
       //находим верхний предел интегрирования
      // int n=source1.SizeOfFile(source1.Name_of_file);
       //находим точки разбиения
       //double [][]X=source1.Data_reading(source1.Name_of_file, n);
       //первый фильтр
       int n_f1=filter[i].SizeOfFile(filter[i].FName_base);
       double  [][]X_f1=filter[i].Data_reading(filter[i].FName_base, n_f1);
       double [][]A_f1=filter[i].Material_interpolation(X_f1, n_f1);
       //второй фильтр
       int n_f2=filter[i].SizeOfFile(filter[i].FName_spray);
       double [][]X_f2=filter[i].Data_reading(filter[i].FName_spray, n_f2);
       double [][]A_f2=filter[i].Material_interpolation(X_f2, n_f2);
       //детектор
       int n_d1=detector1.SizeOfFile(detector1.FName_base);
       double [][]X_d1=detector1.Data_reading(detector1.FName_base, n_d1);
       double [][]A_d1=detector1.Material_interpolation(X_d1, n_d1);
       int n_d2=detector1.SizeOfFile(detector1.FName_spray);
       double [][]X_d2=detector1.Data_reading(detector1.FName_spray, n_d2);
       double [][]A_d2=detector1.Material_interpolation(X_d2, n_d2);
       for (int j=0; j<n-1;j++){
        double Sd;
        Sd=Math.pow(filter[i].Point_z(X_f1, A_f1, n_f1, X[j][0]), filter[i].Thick_base)*Math.pow(filter[i].Point_z(X_f2, A_f2, n_f2, X[j][0]), filter[i].Thick_spray);
        double S;
        double z1=detector1.Point_z(X_d1, A_d1, n_d1, X[j][0]);
        double z2=detector1.Point_z(X_d2, A_d2, n_d2, X[j][0]);
        S=0.273*b[0]*Math.pow(z1, b[1]);
        S=S*Math.pow(z2, b[2]);
        S=S*(1-Math.pow(z1, b[3]));
        if ((z1==0)||(z2==0)){
            x[i][1]=x[i][1];x[i][2]=x[i][2];x[i][3]=x[i][3];}
        else{
            x[i][1]=x[i][1]+Sd*S*X[j][0]*X[j][1]*Math.abs(X[j+1][0]-X[j][0])*e0*Math.log(z1)*1000000;   
            x[i][2]=x[i][2]+Sd*S*X[j][0]*X[j][1]*Math.abs(X[j+1][0]-X[j][0])*e0*Math.log(z2)*1000000;
            S=S*Math.log(z1);
            S=S*Math.pow(detector1.Point_z(X_d1, A_d1, n_d1, X[j][0]), b[3]);
            S=-S/(1-Math.pow(detector1.Point_z(X_d1, A_d1, n_d1, X[j][0]), b[3]));
            x[i][3]=x[i][3]+Sd*S*X[j][0]*X[j][1]*Math.abs(X[j+1][0]-X[j][0])*e0*1000000;
        } 
        } 
        }
        for (int i=0; i<4; i++){
            for (int j=0; j<4; j++){
            //  jTextArea1.append(Double.toString(x[i][j]));   
            }
        }
            

        // решаем систему методом Гаусса
        
            //Переводим матрицу коэффициентов в класс BigDecimal
        BigDecimal [][]a=new BigDecimal[4][4];
        for (int i=0; i<4; i++){
            for (int j=0; j<4; j++){
                a[i][j]=new BigDecimal (x[i][j]);
            }
        }
        
    //double []c=new double[4];
    double []b2=new double[count_of_filters];
    for (int i=0; i<count_of_filters;i++){
        b2[i]=I1[i]-I0[i];
       // jTextArea1.append(Double.toString(b2[i]));
    }
    BigDecimal [] b3=new BigDecimal[count_of_filters];
    for (int i=0; i<count_of_filters;i++){
        b3[i]=new BigDecimal(b2[i]);
    }
    BigDecimal [] c = new BigDecimal[4];
  // for (int i=0; i<4; i++){
 
    //}
    // Прямой ход метода Гаусса
    BigDecimal m=new BigDecimal("0");
   // jTextArea1.append(a[0][1].toString());
   // jTextArea1.append(a[3][3].toString());
   // m=a[0][1].divide(a[1][1],BigDecimal.ROUND_HALF_EVEN);
   // jTextArea1.append(m.toString());
    m=BigDecimal.ZERO;
  for (int k=0; k<3; k++){
      //модифицируем, чтобы избавиться от нуля
      BigDecimal max= new BigDecimal("0");
      max=a[0][k];
      int mmax=0;
      for (int m1=k; m1<3; m1++){
          a[m1+1][k]=a[m1+1][k].abs();
          if (a[m1+1][k].max(a[m1][k].abs())==a[m1+1][k]){
             max=a[m1+1][k];
             mmax=m1+1;
          }
      }
      BigDecimal tmp=new BigDecimal("0");
      tmp=b3[k];
      b3[k]=b3[mmax];
      b3[mmax]=tmp;
      for (int j=k; j<4; j++){
          tmp=a[k][j];
          a[k][j]=a[mmax][j];
          a[mmax][j]=tmp;
      }
     for (int i=k+1; i<4; i++){
        m=a[0][1].divide(a[k][k],BigDecimal.ROUND_HALF_EVEN);
      // m=x[i][k]/x[k][k];//тут почему-то получается ноль!Ответ: точности не хватает
         //jTextArea1.append(Double.toString(m));
      // b2[i]=b2[i]-m*b2[k];
         b3[i]=b3[i].subtract(m.multiply(b3[k]));
       for (int j=k+1; j<4; j++){
          // x[i][j]=x[i][j]-m*x[k][j];
           a[i][j]=a[i][j].subtract(m.multiply(a[k][j]));
       }
     } 
  }
  //обратный ход метода Гаусса
 // jTextArea1.append(Double.toString(x[3][3]));
  //c[3]=b2[3]/x[3][3];
  c[3]=b3[3].divide(a[3][3],BigDecimal.ROUND_DOWN);
 // jTextArea1.append(Double.toString(c[3]));
  for (int k=2;k>=0;k--){
      //double r=0;
      BigDecimal r=new BigDecimal("0");
      for (int j=k+1; j<4; j++){
        //  r=r+x[k][j]*c[j];
          r=r.add(a[k][j].multiply(c[j]));
      }
     // c[k]=(b2[k]-r)/x[k][k];
      c[k]=b3[k].subtract(r);
      c[k]=c[k].divide(a[k][k],BigDecimal.ROUND_DOWN);
  }
  for (int i=0; i<4; i++){
      //jTextArea1.append(Double.toString(c[i]));
  }
      
    //находим искомые параметры
  BigDecimal []z=new BigDecimal [4];
  BigDecimal [] z1=new BigDecimal [4];
  for (int i=0; i<4; i++){
      z[i]=new BigDecimal(b[i]);
      z1[i]=new BigDecimal ("0");
  }
    for (int i=0; i<4; i++){
        //b1[i]=c[i]+b[i];
        z1[i]=c[i].add(z[i]);
        b1[i]=z1[i].doubleValue();
    }
        return b1;
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

 
//создаем источник тока
DataFromFile source=new DataFromFile(jTextField1.getText()); 
  //DataFromFile source=new DataFromFile("C:\\Users\\1\\Desktop\\ияф\\filter\\data.txt"); 
//создаем объект детектор
        String Name_base="C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Si.txt";
        String Name_layer="C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Al.txt";
       Detector detector=new Detector(Name_base, Name_layer);
       
        //считываем паспортные значения
        final    double k_pasp, hd_pasp, hc_pasp, hs_pasp;
       k_pasp=Double.parseDouble(jTextField2.getText());
       hd_pasp=Double.parseDouble(jTextField3.getText());
       hc_pasp=Double.parseDouble(jTextField4.getText());
       hs_pasp=Double.parseDouble(jTextField5.getText());
        //k_pasp=1;
        //hd_pasp=0.21;
        //hc_pasp=0.19;
        //hs_pasp=50;
        // начальная точка
        double [] x1=new double[4];
        x1[0]=k_pasp; x1[1]=hd_pasp; x1[2]=hc_pasp; x1[3]=hs_pasp;
        //матрица нижних ограничений
        double [] l1=new double [4];
        l1[0]=Double.parseDouble(jTextField13.getText());
        l1[1]=Double.parseDouble(jTextField12.getText()); 
        l1[2]=Double.parseDouble(jTextField17.getText());
        l1[3]=Double.parseDouble(jTextField16.getText());
        //матрица верхних ограничений
        double [] u1=new double [4];
        u1[0]=Double.parseDouble(jTextField10.getText()); 
        u1[1]=Double.parseDouble(jTextField14.getText()); 
        u1[2]=Double.parseDouble(jTextField11.getText()); 
        u1[3]=Double.parseDouble(jTextField15.getText());
        int n=0;
       int [] a = new int [4];
        if (jCheckBox1.isSelected()==false){
            n=n+1;
            a[0]=1;
        }
        if (jCheckBox2.isSelected()==false){
             n=n+1;
            a[1]=1;
        }
        if (jCheckBox3.isSelected()==false){
             n=n+1;
            a[2]=1;
        }
        if (jCheckBox4.isSelected()==false){
             n=n+1;
            a[3]=1;
        }
         // создаемм объекты класса filter
        final filter Y[] = new filter[count_of_filters];   
       // create_filters(count_of_filters);
        // объявления массивов для токов детектора
        double [] I0= new double [count_of_filters];
        double [] I1= new double [count_of_filters];
        //Начальная инициализация экспериментальными токами
        for (int i=0;i<count_of_filters; i++){
        Y[i]=new filter(field1[i].getText(),field1[i+count_of_filters].getText(), Double.parseDouble(field2[i].getText()), Double.parseDouble(field2[i+count_of_filters].getText()),Double.parseDouble(field3[i].getText()) );
        I0[i]= Y[i].Exp_value; 
      // jTextArea2.append(Double.toString(I0[i]));
        }
        double [] l=new double [n];
        double [] u=new double [n];
       int k=2*n;
       double [][] c=new double [k][n];
       double [] xc=new double [n];
       int jj=0, zz=0, yy=0;
       boolean flag1=false; boolean flag2=false;
       double r1=hd_pasp; double r2=hc_pasp; //переменные для неявного ограничения r1+r2<=0.5
       for (int i=0;i<4; i++){
        if (a[i]==1) {
            c[0][jj]=x1[i];
            l[jj]=l1[i];
            u[jj]=u1[i];
            if (i==1){
              flag1=true;
              r1=x1[i];
              zz=jj;
            }
            if (i==2){
              flag2=true;
              r2=x1[i];
              yy=jj;
            }
            jj=jj+1;
        }  
       }
        //инициализируем начальную точку комплекса
        for (int j=0; j<n; j++){
            xc[j]=c[0][j];
        }
        double [] c1=new double [4];
        jj=0;
        if (a[0]==0){c1[0]=k_pasp;} else {c1[0]=c[0][jj]; jj=jj+1;}
        if (a[1]==0){c1[1]=hd_pasp;} else {c1[1]=c[0][jj]; jj=jj+1;}
        if (a[2]==0){c1[2]=hc_pasp;} else {c1[2]=c[0][jj]; jj=jj+1;}
        if (a[3]==0){c1[3]=hs_pasp;} else {c1[3]=c[0][jj]; jj=jj+1;}
        Random r=new Random();
       double [] F=new double[k];
        for (int t=0;t<count_of_filters; t++){
            I1[t]=detector_current(source,detector,Y[t], c1);
         // jTextArea2.append(Double.toString(I1[i]));
        }
        /// Ищем сумму квадратов невязок между экспериментом и значениями токов
 ////с паспортными параметрами
        F[0]=nevjazka(I1, I0);
        double v=0.1;
       for (int i=1; i<k; i++){
           v=v+0.1;
           for (int j=0; j<n; j++){
               c[i][j]=l[j]+v*(u[j]-l[j]);
              // jTextArea1.append(Double.toString(c[i][j])+"/"); 
           }
           if (flag1==true){r1=c[i][zz];}
           if (flag2==true){r2=c[i][yy];}
          while (r1+r2>0.5){
               for (int j=0;j<n;j++){
                   c[i][j]=(c[i][j]+xc[j])/2;
               }
            if (flag1==true){r1=c[i][zz];}
            if (flag2==true){r2=c[i][yy];}   
           }
           for (int j=0;j<n;j++){
               xc[j]=((i)*xc[j]+c[i][j])/(i+1);
           }
           jj=0;
        if (a[0]==0){c1[0]=k_pasp;} else {c1[0]=c[i][jj]; jj=jj+1;}
        if (a[1]==0){c1[1]=hd_pasp;} else {c1[1]=c[i][jj]; jj=jj+1;}
        if (a[2]==0){c1[2]=hc_pasp;} else {c1[2]=c[i][jj]; jj=jj+1;}
        if (a[3]==0){c1[3]=hs_pasp;} else {c1[3]=c[i][jj]; jj=jj+1;}
            for (int t=0;t<count_of_filters; t++){
            I1[t]=detector_current(source,detector,Y[t], c1);
         // jTextArea2.append(Double.toString(I1[i]));
        }
        /// Ищем сумму квадратов невязок между экспериментом и значениями токов
 ////с паспортными параметрами
        F[i]=nevjazka(I1, I0);
            //jTextArea1.append(Double.toString(F[i])+"/"); 
       }
       
       for (int j=0; j<k-1; j++){
           for (int i=j+1; i<k; i++){
               if(F[j]>F[i]){
                   double F1;
                   F1=F[j]; F[j]=F[i]; F[i]=F1;
                   double [] Y1=new double [n];
                   for (int z=0; z<n; z++){
                       Y1[z]=c[j][z]; c[j][z]=c[i][z]; c[i][z]=Y1[z];
                   } 
               }
           }
       }
       
       double FM=F[0];
       double A=1.3;
       double [] x0=new double [n];
       double [] xh=new double [n];
       double [] xr=new double [n];
       double Fr;
       boolean cl=true;
       double S1; double S2; double D; double DM; double SD;
       S1=0; S2=0; SD=0;
    for (int i=0; i<k; i++){
        S1=S1+F[i];
        S2=S2+F[i]*F[i];
    }
    SD=S2-S1*S1/k;
    SD=SD/k;
    //jTextArea1.append(Double.toString(SD)+"/"); 
    int m=0;
     do{
        for (int j=0; j<n; j++){
           xh[j]=c[k-1][j];
           x0[j]=(k*xc[j]-xh[j])/(k-1);
       }
       for (int j=0; j<n; j++){
           xr[j]=(1+A)*x0[j]-A*xh[j];
       }
      do{
          for (int i=0; i<n; i++){
              if (xr[i]<l[i]) cl=false;
              if (xr[i]>u[i]) cl=false;
          }
          if (flag1==true){r1=xr[zz];}
          if (flag2==true){r2=xr[yy];}
       //cl=(xr[0]>=l[0])&&(xr[1]>=l[1])&&(xr[0]<=u[0])&&(xr[1]<=u[1])&&(xr[2]>=l[2])&&(xr[2]<=u[2])&&(xr[3]>=l[3])&&(xr[3]<=u[3]);
       while ((cl==false)||(r1+r2>0.5)){
           m=m+1;
           if (cl==false){
               for (int i=0; i<n; i++){
                   if (xr[i]<l[i]) xr[i]=l[i]+0.00000001;
                   if (xr[i]>u[i]) xr[i]=u[i]-0.00000001;
               }
              /* if (xr[0]<l[0]){xr[0]=l[0]+0.00000001;}
               if (xr[1]<l[1]){xr[1]=l[1]+0.00000001;}
               if (xr[2]<l[2]){xr[2]=l[2]+0.00000001;}
               if (xr[3]<l[3]){xr[3]=l[3]+0.00000001;}
               if (xr[0]>u[0]){xr[0]=u[0]-0.00000001;} 
               if (xr[1]>u[1]){xr[1]=u[1]-0.00000001;}
               if (xr[2]>u[2]){xr[2]=u[2]-0.00000001;}
               if (xr[3]>u[3]){xr[3]=u[3]-0.00000001;}*/
           }
               if (r1+r2>0.5){
                   for (int j=0; j<n; j++){
                       xr[j]=(xr[j]+x0[j])/2;
                   }
               }
          cl=true;
          for (int i=0; i<n; i++){
              if (xr[i]<l[i]) cl=false;
              if (xr[i]>u[i]) cl=false;
          }
          if (flag1==true){r1=xr[zz];}
          if (flag2==true){r2=xr[yy];}
          //cl=(xr[0]>=l[0])&&(xr[1]>=l[1])&&(xr[0]<=u[0])&&(xr[1]<=u[1])&&(xr[2]>=l[2])&&(xr[2]<=u[2])&&(xr[3]>=l[3])&&(xr[3]<=u[3]);
       }
       jj=0;
        if (a[0]==0){c1[0]=k_pasp;} else {c1[0]=xr[jj]; jj=jj+1;}
        if (a[1]==0){c1[1]=hd_pasp;} else {c1[1]=xr[jj]; jj=jj+1;}
        if (a[2]==0){c1[2]=hc_pasp;} else {c1[2]=xr[jj]; jj=jj+1;}
        if (a[3]==0){c1[3]=hs_pasp;} else {c1[3]=xr[jj]; jj=jj+1;}
      for (int t=0;t<count_of_filters; t++){
            I1[t]=detector_current(source,detector,Y[t], c1);
         // jTextArea2.append(Double.toString(I1[i]));
        }
        /// Ищем сумму квадратов невязок между экспериментом и значениями токов
 ////с паспортными параметрами
        Fr=nevjazka(I1, I0);
       if (Fr>=F[k-1]){
         for (int j=0; j<n; j++){
                       xr[j]=(xr[j]+x0[j])/2;
                   } 
         
       }
      }
         while (Fr>=F[k-1]);
    F[k-1]=Fr;
    for (int j=0; j<n; j++){
        xc[j]=k*xc[j]-c[k-1][j]+xr[j];
        xc[j]=xc[j]/k;
        c[k-1][j]=xr[j];
    }
    for (int j=0; j<k-1; j++){
           for (int i=j+1; i<k; i++){
               if(F[j]>F[i]){
                   double F1;
                   F1=F[j]; F[j]=F[i]; F[i]=F1;
                   double [] Y1=new double [n];
                   for (int z=0; z<n; z++){
                       Y1[z]=c[j][z]; c[j][z]=c[i][z]; c[i][z]=Y1[z];
                   } 
               }
           }
       }
    
    S1=0; S2=0; SD=0;
    for (int i=0; i<k; i++){
        S1=S1+F[i];
        S2=S2+F[i]*F[i];
    }
    SD=S2-S1*S1/k;
    SD=SD/k;
    DM=0;
    for (int i=0; i<k-1; i++){
        for (int j=i+1; j<k; j++){
            D=0;
            for (int z=0; z<n;z++){
                D=D+Math.pow(c[i][z]-c[j][z], 2);
            }
            D=D*D;
            if (D>DM) DM=0;
        }
    }
    //jTextArea2.append(Double.toString(SD)+"/");
    m=m+1;
   // if (m>60) break;
    }
   //while ((SD>0.000001)&&(DM>0.0001));
    while (SD>0.00001);   
     jj=0;
     //jTextField6.setText(String.format(Locale.US, "%.2f",k_pasp));
     if (a[0]==0){jTextField6.setText(String.format(Locale.ENGLISH, "%.2f",k_pasp));}
     else {jTextField6.setText(String.format(Locale.ENGLISH, "%.2f",c[0][jj])); jj=jj+1;}
     if (a[1]==0){jTextField7.setText(String.format(Locale.ENGLISH, "%.2f",hd_pasp));}
     else {jTextField7.setText(String.format(Locale.ENGLISH, "%.2f",c[0][jj])); jj=jj+1;}
     if (a[2]==0){jTextField8.setText(String.format(Locale.ENGLISH, "%.2f",hc_pasp));}
     else {jTextField8.setText(String.format(Locale.ENGLISH, "%.2f",c[0][jj])); jj=jj+1;} 
     if (a[3]==0){jTextField9.setText(String.format(Locale.ENGLISH, "%.2f",hs_pasp));}
     else {jTextField9.setText(String.format(Locale.ENGLISH, "%.2f",c[0][jj])); jj=jj+1;}
      //  jTextArea2.append(Double.toString(SD)+"/"); 
       // jTextArea2.append(Integer.toString(m)); 
        //.setText("%.4fn"+Double.toString(c[0][0]));
      //  jTextField6.setText(String.format("%.2f",c[0][0]));
        //jTextField7.setText(String.format("%.2f",c[0][1]));
        //jTextField8.setText(String.format("%.2f",c[0][2]));
        //jTextField9.setText(String.format("%.2f",c[0][3]));
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
        jButton2.setVisible(false);
       jPanel4.removeAll();
      jPanel4.revalidate();
        Object sp=jSpinner1.getValue();
       count_of_filters =Integer.parseInt(sp.toString() );
      //  count_of_filters=4;
        //массив панелей для фильтров
        JPanel [] jPan_filter=new JPanel[count_of_filters];
        //jPan_filter=new JPanel[5];
        //массив надписей "1. Подложка"
        label1 = new JLabel[count_of_filters];
        //массив текстовых полей для вывода имени файла
        field1 = new JTextField [2*count_of_filters];
        // массив кнопок для выбора файла
        button1 = new JButton [2*count_of_filters];
        // массив надписей "толщина"
        label2 = new JLabel[2*count_of_filters];
        // массив текстовых полей для ввода толщины
        field2 = new JTextField [2*count_of_filters];
        // массив надписей "мкм"
        label3 = new JLabel[2*count_of_filters];
        //массив надписей "2. Напыление"
        label4 = new JLabel[count_of_filters];
        //массив надписей "3. Ток детектора"
        label5 = new JLabel[count_of_filters];
        // массив текстовых полей для ввода тока детектора
        field3 = new JTextField [count_of_filters];
        //массив надписей "мкА/мА"
        label6 = new JLabel[count_of_filters];
        //Массив надписей "Фильтр 1/2/3/..."
        label7 = new JLabel[count_of_filters];
        jPanel4.setSize(300, 300);
        jPanel4.setBorder(BorderFactory.createTitledBorder(BorderFactory.createBevelBorder(3)));
        //jPanel4.setAutoscrolls(true);
        //jPanel4.setBorder(BorderFactory.createLineBorder(Color.black));
        //final JScrollPane scrollPane = new JScrollPane(jPanel1);
        jPanel4.setLayout(new BoxLayout(jPanel4, BoxLayout.Y_AXIS));

        //jPanel4.setLayout(new BoxLayout(jPanel4, BoxLayout.Y_AXIS));
        for (int i=0; i<count_of_filters; i++){
            //создаем новые экземпляры
            jPan_filter[i] = new JPanel();
            label1[i] = new JLabel("Подложка");
            field1[i]=new JTextField("Материал подложки");
            field1[i+count_of_filters]=new JTextField("Материал напыления");
            button1[i]=new JButton("Файл");
            button1[i+count_of_filters]=new JButton("Файл");
            label2[i] = new JLabel("Толщина");
            label2[i+count_of_filters] = new JLabel("Толщина");
            field2[i]=new JTextField();
            field2[i+count_of_filters]=new JTextField();
            label3[i] = new JLabel("мкм");
            label3[i+count_of_filters] = new JLabel("мкм");
            label4[i] = new JLabel("Напыление");
            label5[i] = new JLabel("Ток детектора");
            field3[i]=new JTextField();
            label6[i] = new JLabel("мкА/мА");
            label7[i] =new JLabel("Фильтр № ".concat(Integer.toString(i+1)));
            label7[i].setFont(new Font("Verdana", Font.BOLD, 13));
            jPan_filter[i].setSize(250, 250);
            jPan_filter[i].setBorder(BorderFactory.createLineBorder(Color.black));
                ////////
            button1[i].addActionListener(new GetNameOfFile (field1[i], button1[i], file));
            button1[i+count_of_filters].addActionListener(new GetNameOfFile (field1[i+count_of_filters], button1[i+count_of_filters], file));
            // горизонтальная группа панели фильтров
            GroupLayout layout = new GroupLayout(jPan_filter[i]);
            jPan_filter[i].setLayout(layout);
            layout.setAutoCreateGaps(true);
            layout.setAutoCreateContainerGaps(true);
            layout.setHorizontalGroup(layout.createSequentialGroup()
                //Горизонтальная группа "Подложка"
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(label7[i])
                    .addComponent(label1[i])
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(field1[i])
                        .addComponent(button1[i]))
                    .addComponent(label2[i])
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(field2[i])
                        .addComponent(label3[i])))
                //Горизонтальная группа "Напыление"
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(label4[i])
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(field1[i+count_of_filters])
                        .addComponent(button1[i+count_of_filters]))
                    .addComponent(label2[i+count_of_filters])
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(field2[i+count_of_filters])
                        .addComponent(label3[i+count_of_filters])))
                //Горизонтальная группа "Ток детектора"
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(label5[i])
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(field3[i])
                        .addComponent(label6[i]))));
            //Выравниваем размер полей ввода
            layout.linkSize(SwingConstants.HORIZONTAL, field1[i], field1[i+count_of_filters], field3[i]);
            layout.linkSize(SwingConstants.VERTICAL, field1[i], field1[i+count_of_filters], field3[i]);
            layout.linkSize(SwingConstants.HORIZONTAL,field1[i], field2[i], field2[i+count_of_filters]);

            //вертикальная группа панели фильтров
            layout.setVerticalGroup(layout.createSequentialGroup()
                .addComponent(label7[i])
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(label1[i])
                    .addComponent(label4[i])
                    .addComponent(label5[i]))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(field1[i])
                    .addComponent(button1[i])
                    .addComponent(field1[i+count_of_filters])
                    .addComponent(button1[i+count_of_filters])
                    .addComponent(field3[i])
                    .addComponent(label6[i]))
                //.addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup()
                    .addComponent(label2[i])
                    .addComponent(label2[i+count_of_filters]))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(field2[i])
                    .addComponent(label3[i])
                    .addComponent(field2[i+count_of_filters])
                    .addComponent(label3[i+count_of_filters])));
            jPanel4.add(jPan_filter[i]);
             //jPanel4.remove(jPan_filter[i]);
            // scrollPane.revalidate();
        }/*
       field1[0].setText("C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_CH.txt");
        field1[1].setText("C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_CH.txt");
        field1[2].setText("C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_CH.txt");
        field1[3].setText("C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_CH.txt");
        field2[0].setText("1.1");
        field2[1].setText("1.1");
        field2[2].setText("1.65");
        field2[3].setText("2.4");
        field1[4].setText("C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Co.txt");
        field1[5].setText("C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Ni.txt");
        field1[6].setText("C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Cu.txt");
        field1[7].setText("C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Mg.txt");
        field2[4].setText("0.17");
        field2[5].setText("0.29");
        field2[6].setText("0.5");
        field2[7].setText("6.49");
        field3[0].setText("2.0130");
        field3[1].setText("1.3656");
        field3[2].setText("0.6656");
        field3[3].setText("0.6140");*/
        //jPanel4.add(scrollPane);
        jPanel4.repaint();
        //scrollPane.revalidate();
        /*  final filter Y[] = new filter[count_of_filters];
        for (int i=0; i<count_of_filters; i++) {
            Y[i]=new filter(field1[i].getText(),field1[i+count_of_filters].getText(), Double.parseDouble(field2[i].getText()), Double.parseDouble(field2[i+count_of_filters].getText()),Double.parseDouble(field3[i].getText()) );
        } */
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox1.isSelected()==true) {
            jLabel16.setVisible(false);
            jLabel17.setVisible(false);
            jTextField10.setVisible(false);
            jTextField13.setVisible(false);
        }
        if (jCheckBox1.isSelected()==false) {
            jLabel16.setVisible(true);
            jLabel17.setVisible(true);
            jTextField10.setVisible(true);
            jTextField13.setVisible(true);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
       if (jCheckBox2.isSelected()==true) {
            jLabel18.setVisible(false);
            jLabel19.setVisible(false);
            jTextField12.setVisible(false);
            jTextField14.setVisible(false);
        }
        if (jCheckBox2.isSelected()==false) {
            jLabel18.setVisible(true);
            jLabel19.setVisible(true);
            jTextField12.setVisible(true);
            jTextField14.setVisible(true);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox3.isSelected()==true) {
            jLabel20.setVisible(false);
            jLabel21.setVisible(false);
            jTextField11.setVisible(false);
            jTextField17.setVisible(false);
        }
        if (jCheckBox3.isSelected()==false) {
            jLabel20.setVisible(true);
            jLabel21.setVisible(true);
            jTextField11.setVisible(true);
            jTextField17.setVisible(true);
        }
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        if (jCheckBox4.isSelected()==true) {
            jLabel22.setVisible(false);
            jLabel23.setVisible(false);
            jTextField16.setVisible(false);
            jTextField15.setVisible(false);
        }
        if (jCheckBox4.isSelected()==false) {
            jLabel22.setVisible(true);
            jLabel23.setVisible(true);
            jTextField16.setVisible(true);
            jTextField15.setVisible(true);
        }
    }//GEN-LAST:event_jCheckBox4ActionPerformed
public double [][] current (DataFromFile source, Detector detector, filter filter, double []b) {
       final double e0=1.6e-19;
       //находим верхний предел интегрирования
       int n=source.SizeOfFile(source.Name_of_file);
             double [][] current=new double[n][2]; 

       //находим точки разбиения
      // double [][] X=new double[][];
          double  X[][]=source.Data_reading(source.Name_of_file, n);
          for (int i=0; i<n; i++){
              current [i][0]=X[i][0];
          }
       //первый фильтр
       int n_f1=filter.SizeOfFile(filter.FName_base);
       double [][] X_f1=filter.Data_reading(filter.FName_base, n_f1);
       double [][] A_f1=filter.Material_interpolation(X_f1, n_f1);
       //второй фильтр
       int n_f2=filter.SizeOfFile(filter.FName_spray);
       double [][] X_f2=filter.Data_reading(filter.FName_spray, n_f2);
       double [][]A_f2=filter.Material_interpolation(X_f2, n_f2);
       //детектор
       int n_d1=detector.SizeOfFile(detector.FName_base);
       double [][]X_d1=detector.Data_reading(detector.FName_base, n_d1);
       double [][]A_d1=detector.Material_interpolation(X_d1, n_d1);
       int n_d2=detector.SizeOfFile(detector.FName_spray);
       double [][]X_d2=detector.Data_reading(detector.FName_spray, n_d2);
       double [][]A_d2=detector.Material_interpolation(X_d2, n_d2);
       for (int i=0; i<n;i++){
        double Sd;
        Sd=Math.pow(filter.Point_z(X_f1, A_f1, n_f1, X[i][0]), filter.Thick_base)*Math.pow(filter.Point_z(X_f2, A_f2, n_f2, X[i][0]), filter.Thick_spray);
        double S;
        S=0.273*b[0]*Math.pow(detector.Point_z(X_d1, A_d1, n_d1, X[i][0]), b[1]);
        S=S*Math.pow(detector.Point_z(X_d2, A_d2, n_d2, X[i][0]), b[2]);
        S=S*(1-Math.pow(detector.Point_z(X_d1, A_d1, n_d1, X[i][0]), b[3]));
       current[i][1]=Sd*S*X[i][1]*X[i][0]; 
       }
       return //current;
               current;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
DataFromFile source=new DataFromFile("C:\\Users\\1\\Desktop\\ияф\\filter\\data.txt"); 
        //создаем объект детектор
        String Name_base="C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Si.txt";
        String Name_layer="C:\\Users\\1\\Desktop\\ияф\\Файлы пропускания\\1mkm_Al.txt";
       Detector detector=new Detector(Name_base, Name_layer);
        final filter []Y = new filter[count_of_filters];   
       //Начальная инициализация экспериментальными токами
        for (int i=0;i<count_of_filters; i++){
        Y[i]=new filter(field1[i].getText(),field1[i+count_of_filters].getText(), Double.parseDouble(field2[i].getText()), Double.parseDouble(field2[i+count_of_filters].getText()),Double.parseDouble(field3[i].getText()) );
       // I0[i]= Y[i].Exp_value; 
      // jTextArea2.append(Double.toString(I0[i]));
        }
        double [] b=new double[4];
        b[0]=Double.parseDouble(jTextField6.getText()); 
        b[1]=Double.parseDouble(jTextField7.getText()); 
        b[2]=Double.parseDouble(jTextField8.getText()); 
        b[3]=Double.parseDouble(jTextField9.getText());
       double [] c= new double[4];
      for (int i=0; i<4; i++){
          c[i]=b[i];
      }
      // DataFromFile source=new DataFromFile("C:\\Users\\1\\Desktop\\ияф\\filter\\data.txt"); 
       int n=source.SizeOfFile(source.Name_of_file); 
      //int n=0;
      double [][][] Y1= new double [count_of_filters][n][2];
      for (int i=0; i<count_of_filters; i++){
          Y1[i]=current (source, detector, Y[i],c);
          //g.drawString(Double.toString(Y[i][0][0]), 350+i*2, 346+i*2);
      } 
      double x_max=0, x_min=0, y_max=0, y_min=0;
      if (jRadioButton2.isSelected()==true){
       x_min=Double.parseDouble(jTextField18.getText()); 
       x_max=Double.parseDouble(jTextField19.getText()); 
      }
      if (jRadioButton6.isSelected()==true){
       y_min=Double.parseDouble(jTextField20.getText()); 
       y_max=Double.parseDouble(jTextField21.getText()); 
      }
      boolean x_log, y_log;
      if (jRadioButton4.isSelected()==true)
        x_log=true;
      else x_log=false;
      if (jRadioButton8.isSelected()==true)
        y_log=true;
      else y_log=false;
try{
    jPanel6.removeAll();
XYLineChart_AWT chart = new XYLineChart_AWT("Графики", "Поглощение", count_of_filters, n,Y1, jPanel6,x_max, x_min, y_max, y_min, x_log, y_log);
chart.pack( );

//chart.setVisible( true );
//jPanel6.add(chart);
  //  jPanel6.getParent().validate();
//jPanel3.add(chart);
//RefineryUtilities.centerFrameOnScreen( chart );

 // chart.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
chart.addWindowListener(new java.awt.event.WindowAdapter() {
    @Override
    public void windowClosing(java.awt.event.WindowEvent windowEvent) {
        if (JOptionPane.showConfirmDialog(chart, 
            "Are you sure to close this window?", "Really Closing?", 
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
           //System.out;
            System.out.println("actionPerformed()");
            
        }


    }
});
    }catch(Exception e){}; 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JFileChooser dialog = new JFileChooser();
    dialog.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    dialog.setAcceptAllFileFilterUsed(false);
   if (dialog.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
       file= dialog.getCurrentDirectory();  
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser fileopen = new JFileChooser();
        fileopen.setCurrentDirectory(file);
//int ret = fileopen.showDialog(null, "Открыть файл");                
int returnVal = fileopen.showOpenDialog(jButton1);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file1 = fileopen.getSelectedFile();
      String name_of_file = file1.getAbsolutePath();
          // What to do with the file, e.g. display it in a TextArea
          jTextField1.setText(name_of_file);
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
String myString = "k="+jTextField6.getText()+" hd="+jTextField7.getText()+" hc="+jTextField8.getText()+" hs="+jTextField9.getText();
StringSelection stringSelection = new StringSelection(myString);
Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
clpbrd.setContents(stringSelection, null);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
jButton2.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jRadioButton2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton2StateChanged
        if (jRadioButton2.isSelected()==true) {
          jTextField18.setVisible(true);
          jTextField19.setVisible(true);
          jLabel25.setVisible(true);
          jLabel26.setVisible(true);
        }
        else {
          jTextField18.setVisible(false);
          jTextField19.setVisible(false);
          jLabel25.setVisible(false);
          jLabel26.setVisible(false);   
        }
    }//GEN-LAST:event_jRadioButton2StateChanged

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        /*if (jRadioButton2.isSelected()==true) {
          jTextField18.setVisible(true);
          jTextField19.setVisible(true);
          jLabel25.setVisible(true);
          jLabel26.setVisible(true);
        }
       if (jRadioButton1.isSelected()==true) {
          jTextField18.setVisible(false);
          jTextField19.setVisible(false);
          jLabel25.setVisible(false);
          jLabel26.setVisible(false);   
        }*/
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton6StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jRadioButton6StateChanged
        if (jRadioButton6.isSelected()==true) {
          jTextField20.setVisible(true);
          jTextField21.setVisible(true);
          jLabel29.setVisible(true);
          jLabel30.setVisible(true);
        }
        else {
          jTextField20.setVisible(false);
          jTextField21.setVisible(false);
          jLabel29.setVisible(false);
          jLabel30.setVisible(false);   
        }
    }//GEN-LAST:event_jRadioButton6StateChanged

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       
           JFileChooser fileopen = new JFileChooser();
        fileopen.setCurrentDirectory(file);
//int ret = fileopen.showDialog(null, "Открыть файл");                
int returnVal = fileopen.showOpenDialog(jButton6);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        
        File file_xml =fileopen.getSelectedFile();
    String name_of_file = file_xml.getAbsolutePath();
           File f = new File(name_of_file);
        
    try{ DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
        DocumentBuilder builder = factory.newDocumentBuilder();
        Document document = builder.parse(f);
        Element root = document.getDocumentElement();
        // для простоты сразу берем message
        Element message = (Element) root.getElementsByTagName("count_of_filters").item(0);
       String textContent = message.getTextContent(); 
        jSpinner1.setValue(Integer.parseInt(textContent));
        jButton2.setVisible(false);
        jButton2ActionPerformed (evt);
        ////////////////////////////////////
        document.getDocumentElement().normalize();		
	NodeList nList = document.getElementsByTagName("filter");
        for (int temp = 0; temp < nList.getLength(); temp++) {

		Node nNode = nList.item(temp);
				
		//System.out.println("\nCurrent Element :" + nNode.getNodeName());
				
		if (nNode.getNodeType() == Node.ELEMENT_NODE) {

			Element eElement = (Element) nNode;

			//System.out.println("Staff id : " + eElement.getAttribute("id"));
                        field1[temp].setText(eElement.getElementsByTagName("base").item(0).getTextContent());
                        field2[temp].setText(eElement.getElementsByTagName("base_th").item(0).getTextContent());
                        field1[temp+count_of_filters].setText(eElement.getElementsByTagName("cover").item(0).getTextContent());
                        field2[temp+count_of_filters].setText(eElement.getElementsByTagName("cover_th").item(0).getTextContent());
			field3[temp].setText(eElement.getElementsByTagName("cur").item(0).getTextContent());

		}
	}
       }catch (Exception e) {
	e.printStackTrace();
    }}
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // по нажатию создается отчет в джаспер и показывается в отдельной форме
       /* ArrayList<DataBean> dataBeanList = new ArrayList<DataBean>(); 
        DataBean tempBean = new DataBean(); 
        tempBean.setk(jTextField6.getText()); 
        tempBean.sethd(jTextField7.getText()); 
        tempBean.sethc(jTextField8.getText());
        tempBean.seths(jTextField9.getText());
        dataBeanList.add(tempBean);
 Map<String, Object> parameters = new HashMap<String, Object>(); 
        parameters.put("DATE", new Date());
 String reportName = "C:\\Users\\1\\Documents\\NetBeansProjects\\sppd\\version10\\JavaApplication7\\src\\report1.jrxml"; // полный путь к отчету
String pathForSaving = "C:\\Users\\1\\Documents\\NetBeansProjects\\sppd\\version10\\JavaApplication7\\src\\report.pdf"; 
//List<Contract> contracstList = _getContracts(); // получаем список договоров с сервера
JRBeanCollectionDataSource beanCollectionDataSource = new JRBeanCollectionDataSource(dataBeanList); //создаем коллекцию Jasper Report Bean Collection
/*try{
     File reportPattern = new File(reportName);
System.out.print(11);}
catch(Exception e){System.out.print(1);}
 try{File reportPattern = new File(reportName);    
     JasperDesign jasperDesign = JRXmlLoader.load(reportPattern);
 System.out.print(22);}
 catch(Exception e){System.out.print(2);}
 try{     
     File reportPattern = new File(reportName);    
     JasperDesign jasperDesign = JRXmlLoader.load(reportPattern);
     JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
 System.out.print(33);}
 catch(Exception e){System.out.print(3);}
 try{     
     File reportPattern = new File(reportName);    
     JasperDesign jasperDesign = JRXmlLoader.load(reportPattern);
     JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
     JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parameters, beanCollectionDataSource);
 System.out.print(44);    
 }
 catch(Exception e){System.out.print(4);}
 try{     
     File reportPattern = new File(reportName);    
     JasperDesign jasperDesign = JRXmlLoader.load(reportPattern);
     JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
     JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, 
                parameters, beanCollectionDataSource);  
 JasperExportManager.exportReportToPdfFile(jasperPrint, pathForSaving);
 System.out.print(55); }
 catch(Exception e){System.out.print(5);}
/*JasperPrint jp = JasperFillManager.fillReport(reportName, null, beanCollectionDataSource);
//JasperPrint jp = JasperFillManager.fillReport(reportName, new HashMap(), beanCollectionDataSource); // заполняем датасет отчета данными из коллекции
File reportPattern = new File("C:\\Users\\1\\Documents\\NetBeansProjects\\sppd\\version10\\JavaApplication7\\src\\report1.jrxml");
JasperDesign jasperDesign = JRXmlLoader.load(reportPattern); 
JasperReport jasperReport = JasperCompileManager.compileReport(jasperDesign);
JRViewer jv = new JRViewer(jp); // компонент просмотра отчета
JasperExportManager.exportReportToPdfFile(jp,"C:\\Users\\1\\Documents\\NetBeansProjects\\sppd\\version10\\JavaApplication7\\src\\report1.pdf"); 
JFrame reportFrame = new JFrame();
reportFrame.getContentPane().add(jv);
reportFrame.validate();
reportFrame.setVisible(true);}
catch(Exception e){System.out.print("что-то пошло не так");}*/
        //Generator rt=new Generator();
       try { 
            new Generator().create(); 
            System.out.println("Генерация отчёта завершена"); 
        } catch (Exception e) { 
            System.out.println("Во время генерации возникла ошибка: " + e); 
        } 
    }//GEN-LAST:event_jButton7ActionPerformed
   
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
 ArrayList<SubReportBean> dataBeanList = new ArrayList<SubReportBean>(); 
        SubReportBean tempBean = new SubReportBean(); 
        tempBean.setfNamebase(0); 
        tempBean.setfNamespray(0,1);
        tempBean.setthickspray(0,1);
        tempBean.setExpvalue(0);
        dataBeanList.add(tempBean);
         SubReportBean tempBean1 = new SubReportBean(); 
        tempBean1.setfNamebase(0); 
        tempBean1.setfNamespray(0,1);
        tempBean1.setthickspray(0,1);
        tempBean1.setExpvalue(0);
        dataBeanList.add(tempBean1);
        JRBeanCollectionDataSource beanColDataSource = new JRBeanCollectionDataSource(dataBeanList); 
        String pathForPattern1 = "C:\\Users\\1\\Documents\\NetBeansProjects\\sppd\\version11\\JavaApplication7\\src\\filters1.jrxml"; 
        //JasperDesign subjasperDesign = JRXmlLoader.load(pathForPattern1); 
       try{ JasperReport jasperMasterReport = JasperCompileManager.compileReport(pathForPattern1);
       Map<String, Object> parameters = new HashMap<String, Object>();
        // parameters.put("subreportParameter", jasperSubReport);
         JasperPrint jasperPrint = JasperFillManager.fillReport(jasperMasterReport,
         parameters, beanColDataSource);
JRViewer jv = new JRViewer(jasperPrint); 
        JFrame reportFrame = new JFrame();
        reportFrame.setSize(800, 1000);
reportFrame.getContentPane().add(jv);
reportFrame.validate();
reportFrame.setVisible(true);
       }
       catch(JRException e){e.printStackTrace();
       System.out.print("Ooops!");}
    }//GEN-LAST:event_jButton8ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new NewJFrame().setVisible(true);
        }
                
        );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    protected static javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    protected static javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    protected static javax.swing.JTextField jTextField6;
    protected static javax.swing.JTextField jTextField7;
    protected static javax.swing.JTextField jTextField8;
    protected static javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
int count_of_filters; 
//private javax.swing.JTextField [] field1;
//массив надписей "1. Подложка" 
JLabel [] label1;
//массив текстовых полей для вывода имени файла
protected static JTextField [] field1;
// массив кнопок для выбора файла
JButton [] button1;
// массив надписей "толщина"
JLabel [] label2;
// массив текстовых полей для ввода толщины
protected static JTextField [] field2;
// массив надписей "мкм"
JLabel [] label3;
//массив надписей "2. Напыление" 
JLabel [] label4;
//массив надписей "3. Ток детектора" 
JLabel [] label5;
// массив текстовых полей для ввода тока детектора
protected static JTextField [] field3;
//массив надписей "мкА/мА" 
JLabel [] label6;
//Массив надписей "Фильтр 1/2/3/..."
JLabel [] label7;
File file;
}
